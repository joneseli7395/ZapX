@using Microsoft.AspNetCore.Identity
@model ZapX.Models.ViewModels.ManageProjectUsersViewModel
@inject UserManager<BTUser> UserManager

@{
    ViewData["Title"] = "Add User";
}
<div class="container">
    <h2>Add Users To @Model.Project.Name</h2>
    <div class="row">
        <div class="col-md-4">
            <p>
                Name :
                <span>@Model.Project.Name</span>
            </p>
            <form asp-action="AssignUsers" asp-controller="Projects" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="@Model.Project.Id" />
                <input type="hidden" asp-for="@Model.Project.Name" />
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="@Model.Users" class="control-label">Roles for @Model.Project.Name</label>
                        <select asp-for="@Model.SelectedUsers" class="form-control" asp-items="@Model.Users" multiple="multiple"></select>
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Assign Users" class="btn btn-info" />
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@Model.Project.Id">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>
<hr />
<div class="row">
    <div class="col">
        <div class="card border-dark">
            <div class="card-header border-dark">
                <h5>Project Users</h5>
            </div>
            <div class="card-body users">
                @foreach (var user in Model.UsersOnProject)
                {
                    var role = (await UserManager.GetRolesAsync(user)).FirstOrDefault();
                    if (role == "ProjectManager")
                    {
                        role = "Project Manager";
                    }
                    if (role == "NewUser")
                    {
                        role = "Unassigned";
                    }

                    <p>@user.FullName: <b>@role</b></p> <br />
                }
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card border-dark">
            <div class="card-header border-dark">
                <h5>Non Project Users</h5>
            </div>
            <div class="card-body users">
                @foreach (var user in Model.UsersNotOnProject)
                {
                    var role = (await UserManager.GetRolesAsync(user)).FirstOrDefault();
                    if (role == "ProjectManager")
                    {
                        role = "Project Manager";
                    }
                    if (role == "NewUser")
                    {
                        role = "Unassigned";
                    }

                    <p>@user.FullName: <b>@role</b></p> <br />
                }
            </div>
        </div>
    </div>
</div>
<br />
<div class="text-center">
    <a asp-action="Details" asp-controller="Projects" asp-route-id="@Model.Project.Id" class="btn btn-info">Back to Project</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

